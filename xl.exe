-- Rvanka Script Loader
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- Настройки
local DISCORD_LINK = "https://discord.gg/asZtkHnn"
local SCRIPT_URL = "https://raw.githubusercontent.com/DnDanYa/Rvanka-Script/refs/heads/main/SpinLorius.lua"

-- Список валидных ключей
local VALID_KEYS = {
    "936281745021673458",
    "471829356802537149",
    "528374916203847562",
    "693847125904526371",
    "384716295073852614",
    "927183645036728194",
    "563829174502817396",
    "218475639184726503",
    "745982361092853674",
    "639271845073816592",
    "482736591027384516",
    "857392614093847251",
    "194827365074918623",
    "326598471085271934",
    "719283645036728194",
    "548172639084526371",
    "637291845073816592",
    "284736591027384516",
    "857492614093847251",
    "926188818250477650",
    "WY4G4PYZ7VW84T99",
    "WSVZHN22PDHRVKQ",
    "KRG47LMGJ67K9Q4T",
    "1256511710039113750",
    "4RASBE6P3S9BSYXC",
    "PKT2RJQGLYBCGAZ6",
    "783492104567239845",
    "159376482093456712",
    "642891735024986523",
    "375129864201753689",
    "918273645036728194",
    "284657390182746592",
    "531846927405816273",
"697283014528374961",
"820465739182635047",
"463829175604928351",
"729384615203847596",
"185736492870351624",
"394827560148293675",
"612593847025186934",
"847162539703452816",
"259473816504728391",
"936281745021673458",
"471829356802537149",
"528374916203847562",
"693847125904526371",
"384716295073852614",
"927183645036728194",
"563829174502817396",
"218475639184726503",
"745982361092853674",
"639271845073816592",
"482736591027384516",
"857392614093847251",
"194827365074918623",
"326598471085271934",
"719283645036728194",
"548172639084526371",
"637291845073816592",
"284736591027384516",
"857492614093847251",
"194637365074918623",
"326458471085271934",
"719384645036728194",
"548162739084526371",
"637281945073816592",
"284736591027384516",
"857492614093847251",
"194637365074918623",
"326458471085271934",
"719384645036728194",
"548162739084526371",
"637281945073816592",
"284736591027384516",
"857492614093847251",
"194637365074918623",
"326458471085271934",
"719384645036728194",
"548162739084526371",
"637281945073816592",
"284736591027384516",
"857492614093847251",
"194637365074918623",
"326458471085271934",
"719384645036728194",
"548162739084526371",
"637281945073816592",
"284736591027384516",
"857492614093847251",
"194637365074918623",
"326458471085271934",
"719384645036728194",
"548162739084526371",
"637281945073816592",
"284736591027384516",
"857492614093847251",
"194637365074918623",
"326458471085271934",
"719384645036728194",
"548162739084526371",
"637281945073816592",
"284736591027384516",
"857492614093847251",
"194637365074918623",
"326458471085271934",
"719384645036728194",
"548162739084526371",
"637281945073816592",
"284736591027384516",
"857492614093847251",
"194637365074918623",
"326458471085271934",
"LVVMUKL99ECZ8ZIX",
"8GSCKOPG8QIM5K5B",
"JJSISSJ7NSFFMCE4",
"H1FGF9HAXTRVMQD6",
"5CS512ZUU9FP796W",
"M2EBLVDI3DTTHTHU",
"ZNYYSBL3TXRFAZ4R",
"OQNYYSBPS4WKSZV8",
"GQKYX2TQB1BRAZS4",
"23TQBMJFHWAMVKLS",
"I8PVVXITSCGZV7R9",
"HX2DDQ8EO5L51PIN",
"Y8SHK3UH8D29RJ16",
"1P3IOHFT25ZJ9D9V",
"8XP7WTKO9HV945YP",
"6O2LLYI17Z8F6PV8",
"LWESI6XM6S058XGT",
"S0C6KN2Z8TM76VH2",
"31DXCRZJVBC7DVNO",
"QKCOH5HX9PMT7ODS",
"B1A53ZRWVNMXCF8G",
"KAXGOCIXPHM964VW",
"EWP955DDAHZ89PZ1",
"OH9YA2A86QYNXHSS",
"G0UPTJDVEYHD1X65",
"GUE5MNYRUG2HRZLC",
"YU0GCYOF89QAAT7T",
"IGJYZ28FWW98TRJ2",
"UI9RZ8WEALFNEQR2",
"77X8Z9PMC8IYWXN5",
"U6LT8B0WJXOXQ6UY",
"4KSAJ4BVERZGLR1A",
"RBF6RBDK83S3ZKX6",
"UJJVR4FHBJD9RCUR",
"UFRISS02CO8L5J35",
"F1KD8NTET39VDT8J",
"SQRD2YK3S1J20S8D",
"1SDVQ5IQU813V6GO",
"2C1GM2TG7VJC2FG3",
"IDZCOVMYP7RFSVIQ",
"LZ5Q0431NPBG6G5R",
"VN6XF1I69GX9RV2E",
"ZOJFI2XAA3OYNT83",
"FRQQ2SF42X9C8B2M",
"SCAF0U823XSFNLU0",
"2I4X37URCBN27TKR",
"ID5K4YQV197ETGT7",
"5Z0PKMGIIL25MOVX",
"8KVZUFY8BNBHM0EV",
"VOQAO6F4N83UUYEE",
"W8DIFB5GZ3WNQXJK",
"WSRPIFRC17NWS6V6",
"PJRA4SQ0390UPZJD",
"7O8S4F7GHKQMYL8T",
"LLFQXCUDJES1UESA",
"LYP8VILYMQK8Z2TI",
"KIXZGL4MYGCGHTU1",
"1X7MHVJQ89WFJ2OX",
"IP121FT27SIVNYEY",
"3I9GZCFE6UUU80NB",
"LHXHQEMVCJI7MHOF",
"Z6KR0NGL8EEXHDC7",
"WODC095A80KZ719K",
"XLOWI368D8XPSC12",
"XLE0NWV26T6UTM5X",
"JFTQ54RL4CJRGGF7",
"DJ5YRVY4I9CNZTWJ",
"ECEBRVX61CXRREOU",
"LF4FNQOS0FVXCOE4",
"9Q1J2MIT3QG12EBA",
"3MJ1SKZNHJWYXYLK",
"HAZH9W4UW07QIKOK",
"U7CNHXVDCHD8H36L",
"0HKKUABRMOA7S295",
"JQSM5J7SEZ9JBJL8",
"D7BQAELPM92JVPXU",
"LWOSBS9XC775ORZG",
"7ODGMKIZ3BKGADYC",
"RL56VXYNWFRTW6N9",
"V2235V81H7XPMRON",
"X06FKXOCWMX0WZF0",
"JNSKS8SH13ILFU53",
"XOLEBOQ0QVDJBK0W",
"6ZYX4QDRSMTIRZJ7",
"KJAG1QSBE9GBYO6L",
"ZMCX89076FSGDO3C",
"73CPGZTCF0X3WGGB",
"1C8SVY6RVVSAKOKU",
"0QOXMQ90897PKBD2",
"5EEM2OGKQQGZXOV0",
"Q6NB16BR7POB6EHT",
"KDBIGRO8LKBALPDW",
"HBX7KZQDU2R8B97S",
"UHEIY6TC612NYSUF",
"98NLNC5VUHMD5FRP",
"BUH4UIOEWTE76CV9",
"67KOL8331ECJYS8Y",
"9ZHQ5IV33MRZZIPU",
"CIZ6DZHV2VTIBJUU",
"U1UUXNZCLJ5XKH9R",
"WAAXHAT7AS8QESSI",
"QM896X6P42KXJCIS",
"YJSCNFI5UKT4PHV9",
"BGG8C7VE7KWBT6AG",
"NMLAGTZ9CDTLSVNN",
"GFD3VNSH9I6ZPOVE",
"J7B5MK5IQH3OQAYN",
"KE97FNS2VSLAA0MX",
"0E0CU9EVAUYV673E",
"G7DT978VSCN0XP01",
"NBSJULR1OO0P91MI",
"XJKJ5A53DFDHWPAP",
"K8PQCTF9228GQFOB",
"9TB4XHW3GY1GD60P",
"N66Q3ASACYXSG32O",
"DAIHGRPZ6LUWB2NY",
"GOX227RJPB3IHFCK",
"K27ULDIK1XRU9FA4",
"8YE7KGDDSRFRNZCT",
"1M2IUK52EDJREQR4",
"DP46YCLIOWP9Q84W",
"0GRMNNF6Y7WTJGN9",
"BVT72PNFUV2SFOL6",
"8UYWLG961BFVA568",
"YGPR06NUJMVMHV1L",
"LMWNW0OWGFLDNVNC",
"NE2G184UU66TAUVT",
"RSH9DPAVAZSFDAIV",
"J0Q0P6QTPOFCMK79",
"TCGZ54FS7C6GEDTR",
"5Z8ZQUSAKAFXW97C",
"ITP5ASWG9L8R4TNC",
"WB1BU7ZU3PV9AE3A",
"N7Z8BQ3PRZIXS11W",
"4SJ7YFOWLNWN5EMK",
"N238OIRZHJCG73AI",
"97P35ANY2OGHO1ZU",
"OLX4NXHN89O2TM6I",
"SHYO2DH7BKCQY12H",
"D7M2DEV35KZVUK2Y",
"C4NUMVUECM62F4VZ",
"4EC8IG5EMOOACW3X",
"M2QIDUQX22AXPHY8",
"PRYWW4RRVZEK6V6J",
"EBF7BWA2Q4WON7CD",
"68QSSOFQ0JKDNADD",
"1AQF040LCLNSWBUP",
"OA7OFT6SW81FC5KZ",
"FG78UBY4KFOWJJCV",
"TBIFEJGREXZYM81F",
"OWEKVJ2UXGCY6QAJ",
"8EE49HVG2R2H9NTF",
"VGXCPD0TFDPALRQZ",
"UG5KFKGVEF1DVMV2",
"ZC7GS80Z0U5ITAZY",
"LBNHLO85JQV2VGDS",
"73HT4XL2CIGAQDXN",
"ZBXGQG17FPI5AB3J",
"4WBF7SFO32T1Z032",
"C5RSQG6BXSK3BZSR",
"TTYXGLXW6KK2PE7S",
"LA8140GNBC51G5UY",
"GWUAAMUGX9D6Y84T",
"E8H0245C8UL3LE16",
"O3646H7B0NS37QZ3",
"TA5YI4JB9LYLND29",
"OFQRHI7QPPU7ZIOE",
"OPU41F3AH89W5B03",
"1Q8UN9O54BOKHWIF",
"9I4IJV2VDDOPNJIX",
"I1NQ4Y0RRPKFGCPO",
"3XPWRPDM790JCCBI",
"PF1O63WK1FEPZPPT",
"CQ60UGHMATG4D2P3",
"CPKBWIW241BRL1N0",
"PHZRZDWXXK1E4BL5",
"KRN5L0PX2DC7E802",
"DXITUZ8NNC85SA3O",
"U4YH9NT28GXUBRF5",
"Q2YKX4CL6OUB0GMW",
"EMEHQWD6C5W7VXMM",
"30ISBT41GZ6LUFEZ",
"EBDD8RMRFW2RWXF3",
"1SBJYJA1PQSK4LR8",
"E30R8CZCX1XLE47T",
"UI525INNY6OV4IH9",
"JHDXAHB611YF1GGO",
"FNE7K9IET39G7FRO",
"6M1FP87QMVAAI3H2",
"UI21CTW4ULEW1GHW",
"ICN2MQEQXC3H1ERL",
"W7TTMBW2LO0OK44M",
"RT104P32XCQ81S5Z",
"N9UFRE4QTMO090AI",
"XS8273UQDR3Y0JZX",
"ZDWTVFVLSRC7NN5V",
"5X54HNPQF68OUU00",
"Y2S21H75SOKKSTXR",
"SIGJDT2Z3UK6TV92",
"ECRL13BL2VBK5YTT",
"8Z1TUTEMXV7E7ZDR",
"EGEF7I0AVXGG75V6",
"YS1YBPJZKOHEUEWT",
"J7KQWA8HZKMOHRPC",
"FSQGQAFHKOCS7H9E",
"Z2OQ6K7NET8XKM4R",
"MSQMPYCFW363GC6J",
"N5U30M4E1T0T5WVE",
"ZANNQVJBKNFLHYNF",
"H25TLYPPCVC048XN",
"D7YL5DGUXUQWWZPL",
"7A2WI7MT8600XDZE",
"5DEV0IT7CM12JL3P",
"XV8Z8TWW5O8NH3I9",
"KDSAZMZS4FV1WUAC",
"6A60GB0R6CHURECG",
"AE64AZL5D60YEFEF",
"WLW066O1WS7IRIJC",
"MARA25GRJKASQM6U",
"YHFXTZ82QRFA8O8J",
"FPFZY0J8KNNPIXZF",
"GAHR6CCXEBYXTALG",
"V30TSGTHT3IYRA90",
"9294TCPT1ONDN77E",
"O5LRY7SL2O44YO20",
"4JSPGSBQF2Z9OD4Q",
"DNE0B0074T7MUWBE",
"QKZMELG9O8IFRVBG",
"CUKQ6WGE8HC8C7JO",
"TW5RWYHUCIKLHSDQ",
"S34OBBX7WP3SKWGT",
"05LT7GHLUMDVGVXR",
"UH79GLXTRPQPH03R",
"0BU9EQC2UQLL30R0",
"G30V31TSV1FTFS45",
"19NFI8ZQ5INCKN7S",
"MQH5IOBHVTZA7W85",
"D1TJ12GR8S1ZMNWK",
"NKK5XHUCKN3MN61O",
"V37MXERC2NE2V31W",
"Q8RW68SWPYJ86ZAK",
"NR3WH6E0FBQ2PNXA",
"8UUPYDODMDRB9A6I",
"9ZLW9RXTY3LBM4MI",
"U9FG48EKDYEC18SX",
"NCEQXBQ76SHK5ZTC",
"45HWDPIWLU837M12",
"E7YIHMJBO9KXTLQ7",
"DQXHYOB7C4DXC9YZ",
"SFYU8WORKW67ANCD",
"SLW2Y4I8L9WW62KD",
"R8UKMN9EGDCA0EZP",
"LDDKR5B4NEOST94U",
"UGBGMB0W7VAD4IXO",
"CQ6IQ3BVLK9090V8",
"KSFXWU9OIUZ2RFSG",
"VTAK1YU0VB1M7GYR",
"90X41VCL9HXBF4ZQ",
"VJ2LJED14VV2IMLA",
"W345GJERR5NG9AGX",
"L17AL9J0Y3VGBN8P",
"XNL38PYSVXF2GRIG",
"62KKXXGO8849W9PP",
"L5U9TYA5JYK4AEV4",
"PAA39A89T23T7BGN",
"7QFDCZ5EXEX0YK5J",
"V5CLAEBTH5AXFU4R",
"UXD19HNFTBYLURPV",
"1WEW82W1IYVATAU6",
"ZXHDS67BI2BUOHQP",
"YNIUTYIPASL8YK75",
"V2KB061AUFZXYIRZ",
"I60WGM5UV1MFB4UT",
"JZ35CK7N5WA3L4NJ",
"3H0JFGNRYTH6K9K7",
"9CT2XCEPEO59OZFY",
"8I6I6OO0KYY35PZC",
"IWNJPAFJSD00ISH3",
"RSN685LIIDWGC9KT",
"5WK5N9E0JTPRO9SW",
"QXPQKRKR6SRTQLP7",
"CDPH4UR15UYD4TGF",
"I0P1XLJPIIKR1WUL",
"V64TDNZ9PHM0383S",
"MO45FJDRZAMWUL3V",
"HTCJJT5LBTEA2QUP",
"0CTFTWHF5JE3M7NL",
"L6LJN45FWLQHQKDK",
"6SJKCZGCU3HK94JP",
"SULE9YH5QZZXJU4I",
"DN0ZSWCU8V9ZV5K0",
"0D64NASUFLFA3RY6",
"NXP2OERZH6OMJ0VP",
"14QGBKG879X3PHOD",
"X5GM3JXV8O7SER67",
"MOJNVGXOD9444DTM",
"MMW1T1T9DZ4HQ97A",
"YHHN7YNJ95JQHGHY",
"YN5T4627PDQB00GD",
"RYQM0NBC111NOBOJ",
"Q4F79PMHEMJYC91X",
"ZEPLVESXH99ME6FU",
"MYQ87ELF9MDB6YC3",
"H6KL8Y1ISY7952V1",
"OJRHK8CPOEG5VQB6",
"GZ1PMSFPMSRUJOIN",
"BWOVUPMM0APSQUUX",
"MM199D4KIU1WGDOQ",
"QBMTRIM5J6P7B405",
"U7MNH1GGXOEL8S6O",
"3JN7ODOH907MYH6Y",
"WP5KMP54IFG0GQYR",
"E1ZPCZMS016XJXPN",
"FEP2KMFN1B9P559I",
"UL8R5T8D58OMIBRB",
"QGXFN17KCJL1ZAUX",
"NH17F7JZ24DDH3XR",
"PA05CYHVKKVCAZXI",
"5DBES1WSZX0MR1DG",
"B88FPM4Q5GYINYIS",
"Z15H12UPXN1LH956",
"7C91DCKHOL64W3B6",
"G9W5KF791G5JZQ8F",
"VEQ4GKFMO656IXUD",
"TT8VENI2Y709WXHJ",
"GONDJ6THDEY2U1SF",
"SBSL9LCDOZ4B72BC",
"GOAAFE06ABZBP3JS",
"K2OBFHTGO5TULSY6",
"TV6P0X1QL4LQO1BO",
"1C2HP4D4MX0PYZD7",
"QTWCRSH20D1LK6YE",
"4F6CR4Y5DK0LBKTD",
"69B9IQSS0WOXQD31",
"PTKM2ARJ2JAN005P",
"I2XW6FVST0VIR85A",
"Z0C37QGF4JIULXJ2",
"6WPEIMMSS4Q957MG",
"OUKF0OCEIW9JVKR5",
"VWPOD6WEEFAMNWMS",
"N61OIE3XBLURVQRR",
"EYEG509NDTKDU5J1",
"A9WCT6REAETNQ1Y2",
"9OGRSXNGRRWHQJQX",
"7THLLS29D6KQOKT9",
"HGAK5MREOIDML0BO",
"8YGL70ZOBZWHBPN1",
"3DB076B67KCXXU67",
"KEJOE95L8VO3M32Y",
"88EC4KQ3003YK0O7",
"KJ12CBO1T0PB0FRK",
"STXFN1038X7L78BD",
"HAEAV45QY8X4UP66",
"X16WB1CFL0BULV80",
"8N33MLT8AQJ56Y3A",
"VKYOB23LSWDJA3YO",
"Z9JHX6PU5GZH93BG",
"DOX6ONG8ZCSSOYU0",
"TK8USHH6EL2GR3A3",
"FKM5RSBNKS4NKAZR",
"Y8FT5ENM6TZY5VJQ",
"EPOCBCH873WWM9EL",
"KA431D720PKPNQ13",
"EA2E1ENGGPLKRY1U",
"UOGQV7R2CYIGBB9K",
"NA5T0HVDGGQNB161",
"NFIS2MIBGF6QTN2T",
"KFPO0G8JEISAS0OQ",
"L9J22DK40514H6JB",
"6KRM1RJPW0E1B974",
"FIEJH7ZU0V5QWZT2",
"651D9AMVON2KME4M",
"HKPILTH0MJ4JTL2V",
"GQPA8O6MAM5XZ6YG",
"QRGFP1Q2N3L8B84B",
"4KPO40LF0VJ19N0P",
"NAXZDV2K25ES0I6K",
"717LURV2EQGS49Q3",
"DPYOR3HAN7N3OQ6B",
"PCNI1PBF9KCK5IK5",
"L96F9VSYMX8KVOX9",
"274I5VHVPZII3YWY",
"X3OZ6U99CXDCLFG8",
"NCDB2Z08CJI7TB48",
"X2RFS3HYKI9UOLM9",
"QGAUUH4RAPIO9KEV",
"13UQNUCDSE219A4Q",
"7L0T56IOENS31V56",
"BMULWX9MZ9Q6KSWG",
"VPYE1B6ME63AWDB7",
"9OOFZVHDQ927L3FK",
"BBX8JDHW2TT25FU8",
"15WIXEWDCDWCWIDZ",
"ZT1DJCPZHMX7DRTQ",
"9TZ26OJU3KIHGSRJ",
"S1O1PAHFLE1PXKD9",
"82Z6FHNDV3A3QDBG",
"LVXFBHO6L92MNUO3",
"7Q2LINK02O02IOAH",
"ERQD8UVF7JB9G7G5",
"2LFUTY8APW1ENMXO",
"EURN0PZSQEGVAVV5",
"BJHS1KCLHJGIVV8M",
"0GS228C53UMCLDSX",
"EAEZNGGA6JBG0FYS",
"1P2YNOAT2JK62K4X",
"7FFSQHNKE39Y9WGY",
"BBZRQZ9BSKD9UK3B",
"KFABZCSL143FB5WR",
"3XDEF2ITMABPT961",
"3OPJKBFR37U67HIT",
"AHOT4ZUYHJQH0PA1",
"B2BCFP4B6CUG37GT",
"Q5YHETW9T7GXRD06",
"00S3RL9HMH8I5897",
"738R2IXW71LHVWDQ",
"QJRFCYI361FBMWV9",
"A8I50ERWCI44PDVY",
"WSLL4MZVL2NB7TFL",
"NRB3FME4NCEQYU8I",
"R559G4UO5XQHZ482",
"BQ66REGW0BJQEX4M",
"P7I3G8OPLK2XQOWG",
"NCMC7N5IIHFTF7B8",
"ORW8X1T91RWAEX87",
"U6B2TI349DX0H1NB",
"KQBFHGCKEVAOLHK8",
"3CZ0LKBL6M29RLWW",
"JTFMODBX98FSU2N4",
"E33D3ODO2N824450",
"Z2MRWDZEMI5Q8FUY",
"6IJ963FW1RM0WNI4",
"GE627Y3BHZDZNRWO",
"HGKA06B32U4DDEJO",
"W1V6OQ1KUE8RQWCY",
"T7R9EV7MRAFQ5YS7",
"6NMQCNCL4SC1IF41",
"7F3DD07Z2HD8GTQJ",
"V9DQHIA56VSZARKO",
"BM1OU3GGRJOEQYDV",
"LEFBS4S566I26R2U",
"P8GL7WADFS5ATDLO",
"K7C82REN84NR5D7U",
"5G0X7ANELXS043P9",
"HJ8SO06ZQKVT8564",
"QAPIP1710JX4P7YY",
"HPXASY7YFO4BPB9I",
"IXWFE9CV19E96UM9",
"ROW4Q34VDR63ZZV0",
"89D0QOQMQ9GQE4XF",
"7OJ8Q77VU7WCP3B7",
"2F8WUVDGDBES78YJ",
"H65P6YXU1YHFVRVR",
"9V39AKH0HCR6OS2E",
"C58BQ2O6H7WP77UQ",
"K32WVA2O1808IT8T",
"7H15AVUCSDYE7EUS",
"9EAA2D9JIAIID4WL",
"DVGFDG5DTYJ7EOX8",
"9AGS4XIH47YDLDY2",
"1MSD4DOCH56WTKW7",
"0OFPJR49F4Z8D1CB",
"A5Q6HA45P6X74XP9",
"QFTAQ9QIG0VBQX7B",
"A415TMHNERH35XU3",
"H1ITH3RRWU1LF78R",
"CH8H44JYLBEES8HD",
"37ZB9AJKMZNKU8PN",
"MU1B1T3N5C1695OW",
"TI3MS8VAH4L3RWFW",
"8XGEF6G34QIGE38V",
"G9Y9RCGQXY0AHEST",
"NRCCDOPJ8ED90U5J",
"PKLXY1LXQVTTVBJV",
"4YVH91IMOB6VSAS5",
"CSK9V59Z6NUE6F85",
"VEFNT2W0C6Q39VW3",
"4MTI9U6COOQV13JB",
"9EIC13HO32YNEUC3",
"ECNQE2ESEZLGVMIY",
"R1U6PMOH11QX6AMD",
"CRPIYZ1DJG98JCUK",
"CWP4ZWAQV0D2M0SC",
"VFY9T3ZOI8EY4XGD",
"B11HJZEQ614FJFEQ",
"747BTMC4A1C1MX4F",
"ZL41NY14U7WBWMZL",
"3HAEA7DJM887RVU9",
"7HVT0L6IF44QPIN1",
"HELHHU76M8VO7DXE",
"0Y7BO8PJS7BUEGUR",
"65BEDS1GGAN8EJBR",
"SQ9HJMERN6SMFJLT",
"869CIX3QX6FET1S7",
"4KQ4RYCAJ3Q58HKE",
"2TW39O7HBKWP1G4D",
"CIO8LZRQOZT2L1JC",
"3XE2Q30A8K17WUEA",
"4P2OWX5NPKCDSUFY",
"G2HC28B114WEEV1D",
"KIPB09B64H5OPWS2",
"7N2P581B909JKOSH",
"OEQAHOZKGU0CVCVC",
"PZ0L6EW5DVCFQ582",
"49I8ED8U4AEPTXOV",
"UNSP488T74MD0HMG",
"PYYIOBP3RYHNA0M9",
"6YAS45ELR39M17M2",
"EZ5NUX4ZG8HEGTVX",
"I8OFZUV6HC49EM9S",
"3C0L7XUGTM05FMMW",
"CBA96NBWYFICKD6O",
"USE2OAJCT6HE8JRB",
"PA7VX2KRXEWYQ89V",
"2YLNM9X2GXKOEFG3",
"9MHVOX869FD0JY3E",
"GD2P45VQGYKNPSV7",
"MWZT20QXHTAT85GF",
"H646WVX84D0ZYYMJ",
"0SINKK370ZSGYXUQ",
"PLA1T83MQ5I8JY3N",
"HPNXYZX8I33XYVE8",
"G8EXPSW99LXEOM4K",
"10O5UOR92RKWUKZ7",
"02U8H8586FDIN49C",
"EIA312XVW01XLB7E",
"JDV1JVMKADIL02XW",
"8DG0LP13W5BUFE5M",
"6XRLDCSIII6GQN59",
"TCGGVA3H9PGOTGHR",
"M6WO2PHIMV93LOMX",
"DVCJCFXB847L241O",
"QHI5DABF5OO6CB22",
"C0NT2CVTGDZUMM2H",
"YZ9HO9VPYZWFDHZN",
"D8OS2ARXB6GZLRBZ",
"Y7RY46KCIEBPYRMP",
"E4ECO3WVK96J2VJS",
"YVW60PCY5YY1UBTE",
"X35M5PN93PE0X5A9",
"D73GWS1T8X1GPP7V",
"JK90J9WN50VSJ3L5",
"D389FHB28R9O8UR3",
"1B5UFOY5A4LL7OJ9",
"O8S6LI9XNRNMVFCQ",
"A209THDCGSCRIK7F",
"Z1DU8AMTRELO07V2",
"OCQFB7OZK8QR5UC1",
"Q8358GV8D1C5TJDJ",
"XQM29S274RWOEXD4",
"CUMAR6DN70KN8L8L",
"EGBHML7WTM6NFULI",
"6LEC1YPGVCL7R1FE",
"60YXRSLDN1DR9X3W",
"PADNEPZ72HTR1H83",
"1ZGRTS5Y3K82NLPQ",
"HSAZTV3ADDA2SKC6",
"J5S3T4IU2LTJOUBX",
"A52QMBTDJ9RPUMV1",
"C31V0WKPTIXYEHY4",
"6BYXFV1N6DYW6C7D",
"AX0J0UR42L8430NM",
"GDFYMFW1V1TCVF0H",
"87Z4KR41L61FA9Z2",
"4W0HDRBNL2D8A0Q2",
"9PXSEID6CDWPH9FY",
"CU4Y4MC5LP1DDWNG",
"7QLCY87Z4OEOH2WB",
"FOXZSV1ZOKXS0XYN",
"OVE11I1XAN1HG7EG",
"A1XPKPJXRDH4DZ4E",
"EU7GWU5Q8IVUMQMW",
"LYVR1CA3UKX36KIJ",
"WAV7B0MCKTNMASM7",
"53SHRHXVD1UP8TS8",
"8GL9WZOHQ0V92QIP",
"UMHR8BPBF16EMOMT",
"JD5YRJWPMT3DMYCJ",
"NOL3NCPXKZXSM84Q",
"FL1TI7IEBKM7LY78",
"U17Z3ONYRN7AH6LE",
"6V49F68YOBW93LGI",
"TXK9KW4FDG99G9R9",
"GWZXCAYUGCBELXOT",
"BTD5QFVC9Y9142TZ",
"D79Y0I753NP0XSZU",
"GHFAS21ZFFZ90EMY",
"A859ZT7886DFLAL4",
"B11TTB60SV8UFW9P",
"DSJS6L16X1ZWKBOU",
"052A9S4ZHYQQKB4R",
"P3K7BT0ZAZS4YQQK",
"R194IN3CZH0YVUOE",
"1BC6YCB1W96OHZ9H",
"70WKPCOH2LC6T1LM",
"LFSBWZ595IL26BQF",
"NXIPRJIWP9UTGWE6",
"QD4X7A1YUDN5TZ3L",
"2I2EH672XXT3XCD6",
}

-- Создаем интерфейс
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RvankaLoader"
screenGui.Parent = game:GetService("CoreGui")
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 350, 0, 300)  -- Увеличена высота
mainFrame.Position = UDim2.new(0.5, -175, 0.5, -150)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Text = "Rvanka Script Loader"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Size = UDim2.new(1, -30, 0, 40)
title.BackgroundTransparency = 1
title.Parent = mainFrame

-- Кнопка закрытия
local closeBtn = Instance.new("TextButton")
closeBtn.Text = "×"
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.Parent = mainFrame
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 4)

-- Информация о получении ключа
local keyInfo = Instance.new("TextLabel")
keyInfo.Text = "Ключ можно получить в Discord сервере"
keyInfo.Font = Enum.Font.Gotham
keyInfo.TextSize = 12
keyInfo.TextColor3 = Color3.fromRGB(180, 180, 180)
keyInfo.Size = UDim2.new(0.8, 0, 0, 20)
keyInfo.Position = UDim2.new(0.1, 0, 0.2, 0)
keyInfo.BackgroundTransparency = 1
keyInfo.TextXAlignment = Enum.TextXAlignment.Left
keyInfo.Parent = mainFrame

local inputFrame = Instance.new("Frame")
inputFrame.Size = UDim2.new(0.8, 0, 0, 35)
inputFrame.Position = UDim2.new(0.1, 0, 0.3, 0)
inputFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
inputFrame.Parent = mainFrame
Instance.new("UICorner", inputFrame).CornerRadius = UDim.new(0, 4)

local keyBox = Instance.new("TextBox")
keyBox.PlaceholderText = "Введите ключ доступа..."
keyBox.Size = UDim2.new(1, -10, 1, -10)
keyBox.Position = UDim2.new(0, 5, 0, 5)
keyBox.BackgroundTransparency = 1
keyBox.TextColor3 = Color3.fromRGB(255, 255, 255)
keyBox.Font = Enum.Font.Gotham
keyBox.TextSize = 14
keyBox.Parent = inputFrame

local getKeyBtn = Instance.new("TextButton")
getKeyBtn.Text = "Копировать сыллку на дискорд"
getKeyBtn.Size = UDim2.new(0.8, 0, 0, 35)
getKeyBtn.Position = UDim2.new(0.1, 0, 0.5, 0)
getKeyBtn.BackgroundColor3 = Color3.fromRGB(90, 60, 150)
getKeyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
getKeyBtn.Font = Enum.Font.GothamBold
getKeyBtn.TextSize = 14
getKeyBtn.Parent = mainFrame
Instance.new("UICorner", getKeyBtn).CornerRadius = UDim.new(0, 4)

local loadBtn = Instance.new("TextButton")
loadBtn.Text = "АКТИВИРОВАТЬ СКРИПТ"
loadBtn.Size = UDim2.new(0.8, 0, 0, 40)
loadBtn.Position = UDim2.new(0.1, 0, 0.7, 0)
loadBtn.BackgroundColor3 = Color3.fromRGB(70, 120, 70)
loadBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
loadBtn.Font = Enum.Font.GothamBold
loadBtn.TextSize = 16
loadBtn.Parent = mainFrame
Instance.new("UICorner", loadBtn).CornerRadius = UDim.new(0, 6)

-- Улучшенное перетаскивание окна
local dragging, dragInput, dragStart, startPos

local function updateInput(input)
    local delta = input.Position - dragStart
    local newPos = UDim2.new(
        startPos.X.Scale, 
        startPos.X.Offset + delta.X,
        startPos.Y.Scale, 
        startPos.Y.Offset + delta.Y
    )
    
    local viewportSize = workspace.CurrentCamera.ViewportSize
    newPos = UDim2.new(
        math.clamp(newPos.X.Scale, 0, 1),
        math.clamp(newPos.X.Offset, 0, viewportSize.X - mainFrame.AbsoluteSize.X),
        math.clamp(newPos.Y.Scale, 0, 1),
        math.clamp(newPos.Y.Offset, 0, viewportSize.Y - mainFrame.AbsoluteSize.Y)
    )
    
    mainFrame.Position = newPos
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)

-- Функция копирования в буфер обмена
local function copyToClipboard(text)
    local methods = {
        setclipboard, toclipboard, writeclipboard, set_clipboard,
        function(t) 
            local tb = Instance.new("TextBox")
            tb.Text = t
            tb.Parent = screenGui
            tb:CaptureFocus()
            tb:SelectAll()
            task.wait()
            tb:ReleaseFocus()
            tb:Destroy()
            return true
        end
    }
    
    for _, method in ipairs(methods) do
        if type(method) == "function" then
            local success = pcall(method, text)
            if success then return true end
        end
    end
    return false
end

-- Функция проверки ключа
local function validateKey(key)
    key = tostring(key):gsub("%s+", "")
    for _, validKey in ipairs(VALID_KEYS) do
        if key == validKey then
            return true
        end
    end
    return false
end

-- Обработчик кнопки получения ключа
getKeyBtn.MouseButton1Click:Connect(function()
    if copyToClipboard(DISCORD_LINK) then
        local notif = Instance.new("TextLabel")
        notif.Text = "✓ Ссылка скопирована: "..DISCORD_LINK
        notif.Size = UDim2.new(0.9, 0, 0, 30)
        notif.Position = UDim2.new(0.05, 0, 0.85, 0)
        notif.BackgroundColor3 = Color3.fromRGB(40, 60, 40)
        notif.TextColor3 = Color3.fromRGB(180, 255, 180)
        notif.Font = Enum.Font.GothamBold
        notif.TextSize = 12
        notif.TextXAlignment = Enum.TextXAlignment.Left
        notif.Padding = UDim.new(0, 10)
        notif.Parent = mainFrame
        Instance.new("UICorner", notif).CornerRadius = UDim.new(0, 4)
        
        task.spawn(function()
            wait(3)
            local tween = TweenService:Create(
                notif,
                TweenInfo.new(0.5),
                {TextTransparency = 1, BackgroundTransparency = 1}
            )
            tween:Play()
            tween.Completed:Wait()
            notif:Destroy()
        end)
    else
        game.StarterGui:SetCore("SendNotification", {
            Title = "Ошибка копирования",
            Text = "Вручную скопируйте: "..DISCORD_LINK,
            Duration = 8,
            Icon = "rbxassetid://7072718362"
        })
    end
end)

-- Загрузка и активация скрипта
loadBtn.MouseButton1Click:Connect(function()
    local key = keyBox.Text:gsub("%s+", "")
    
    if key == "" then
        keyBox.PlaceholderColor3 = Color3.fromRGB(255, 100, 100)
        task.wait(0.5)
        keyBox.PlaceholderColor3 = Color3.fromRGB(180, 180, 180)
        return
    end
    
    loadBtn.Text = "ПРОВЕРКА КЛЮЧА..."
    loadBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 120)
    
    -- Проверка ключа
    local isValid = validateKey(key)
    
    if not isValid then
        loadBtn.Text = "НЕВЕРНЫЙ КЛЮЧ!"
        loadBtn.BackgroundColor3 = Color3.fromRGB(150, 60, 60)
        
        -- Добавляем подсказку
        local hint = Instance.new("TextLabel")
        hint.Text = "Ключ можно получить в Discord сервере"
        hint.Size = UDim2.new(0.8, 0, 0, 20)
        hint.Position = UDim2.new(0.1, 0, 0.9, 0)
        hint.TextColor3 = Color3.fromRGB(255, 120, 120)
        hint.Font = Enum.Font.Gotham
        hint.TextSize = 12
        hint.BackgroundTransparency = 1
        hint.Parent = mainFrame
        
        task.wait(1.5)
        loadBtn.Text = "АКТИВИРОВАТЬ СКРИПТ"
        loadBtn.BackgroundColor3 = Color3.fromRGB(70, 120, 70)
        hint:Destroy()
        return
    end

    loadBtn.Text = "ЗАГРУЗКА СКРИПТА..."
    loadBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 120)
    
    local success, response = pcall(function()
        return game:HttpGet(SCRIPT_URL, true)
    end)
    
    if success and response then
        loadBtn.Text = "СКРИПТ АКТИВИРОВАН!"
        loadBtn.BackgroundColor3 = Color3.fromRGB(70, 150, 70)
        
        local func = loadstring(response)
        if func then
            pcall(func)
        end
        
        wait(1)
        screenGui:Destroy()
    else
        loadBtn.Text = "ОШИБКА ЗАГРУЗКИ!"
        loadBtn.BackgroundColor3 = Color3.fromRGB(150, 60, 60)
        task.wait(2)
        loadBtn.Text = "АКТИВИРОВАТЬ СКРИПТ"
        loadBtn.BackgroundColor3 = Color3.fromRGB(70, 120, 70)
    end
end)

-- Добавляем видимость всем элементам
for _, v in pairs(mainFrame:GetChildren()) do
    if v:IsA("TextButton") or v:IsA("TextBox") or v:IsA("TextLabel") then
        if not v.TextColor3 then
            v.TextColor3 = Color3.fromRGB(255, 255, 255)
        end
    end
end
